---
- hosts: www
  vars_files:
    - vars/main.yml
  sudo: true

  tasks:
#  - name: Test connection
#    ping:

  - name: SSHD | Copy sshd config from template
    template: src=templates/sshd_config.template dest=/etc/ssh/sshd_config owner=root group=root mode=0600

  - name: YUM | Install EPEL repo
    yum:
      name: "{{ epel_repo_url }}"
      state: present
    register: result
    until: '"failed" not in result'
    retries: 5
    delay: 10

  - name: YUM | Import EPEL GPG key
    rpm_key:
      key: "{{ epel_repo_gpg_key_url }}"
      state: present

  - name: NGINX | Installing NGINX repo rpm
    yum:
      name: http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm

  - name: NGINX | Installing NGINX
    yum:
      name: nginx
      state: latest

  - name: NGINX | Starting NGINX
    service:
      name: nginx
      state: started

  - name: Mysql | Installing Mysql repo
    yum:
      name: https://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm

  - name: Mysql | Install Mysql
    action: yum name={{ item }}
    with_items:
    #  - mysql-python
      - mysql
      - mysql-server
    #  state: latest

  - name: Mysql | Start the MySQL service
    action: service name=mysqld state=started

  - name: Mysql | Install python mysql module for Ansible
    yum:
      name: MySQL-python
      state: latest

  - name: Mysql | Update MySQL root password for all root accounts
    mysql_user: name=root host={{ item }} password={{ mysql_root_pass }} state=present
    with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost

  - name: Mysql | Copy the root credentials as .my.cnf file
    template: src=root.cnf.j2 dest=~/.my.cnf mode=0600

  - name: Mysql | Ensure Anonymous user(s) are not in the database
    mysql_user: name='' host={{ item }} state=absent
    with_items:
      - localhost
      - "{{ ansible_hostname }}"

  - name: Mysql | Remove the test database
    mysql_db: name=test state=absent
    notify:
      - Restart MySQL

  - name: Wordpress | Download Wordpress
    get_url:
      url="http://wordpress.org/wordpress-latest.tar.gz"
      dest="/home/{{ deploy_user }}/wordpress-latest.tar.gz"
    register: new_archive

  - name: Wordpress | Unarchive latest tarball
    unarchive:
      src="/home/{{ deploy_user }}/wordpress-latest.tar.gz"
      dest="/home/{{ deploy_user }}/"
      copy=no
    when: new_archive|changed

  - name: Wordpress | Copy wp-config.php from template
    template: src=templates/wp-config.php.template dest=/home/{{ deploy_user }}/wordpress/wp-config.php mode=0644 owner=nobody group=wheel
